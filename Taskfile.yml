# https://taskfile.dev/usage/
version: "3"
vars:
  DOCKER_IMG_NAME: hello-phx-api-only
  DOCKER_CONTAINER_NAME: hi
  LOCAL_MAGIC_COOKIE: hello
includes:
  # task f:iex
  flyio:
    taskfile: ./Taskfile-flyio.yml
    aliases: [f, fly]
    optional: true
tasks:
  default: mix test
  sh: iex --erl "-kernel shell_history enabled" -S mix
  run: iex --erl "-kernel shell_history enabled" -S mix phx.server
  node:
    env:
      # RELEASE_DISTRIBUTION: name
      ERL_AFLAGS: "-kernel shell_history enabled"
    cmds:
      - |
        iex --name {{.DOCKER_CONTAINER_NAME}}@127.0.0.1 --cookie {{.LOCAL_MAGIC_COOKIE}} -S mix
  node6:
    env:
      # RELEASE_DISTRIBUTION: name
      ERL_AFLAGS: "-proto_dist inet6_tcp -kernel shell_history enabled"
    cmds:
      - |
        iex --name {{.DOCKER_CONTAINER_NAME}}@::1 --cookie {{.LOCAL_MAGIC_COOKIE}} -S mix

  # task remote.connect6
  # CLUSTER_APP_NAME=xxx task remote.connect6
  remote.connect6:
    aliases:
      - remote.c6
    # https://fly.io/docs/elixir/advanced-guides/clustering-from-home-to-your-app-in-fly/
    env:
      ERL_AFLAGS: "-proto_dist inet6_tcp -kernel shell_history enabled"
      CLUSTER_APP_NAME: "hello-phx-api-only"
      RELEASE_COOKIE: happy-cookie-not-secret-but-for-cluster
    cmds:
      - echo "==Custerning into remote app ${CLUSTER_APP_NAME}"
      - run/cluster-with-remote.sh
  # https://fly.io/docs/elixir/advanced-guides/connect-observer-to-your-app/
  # NOTE:
  # - If everything worked and itâ€™s connected, under the Nodes menu you should see the connected remote node.
  observer:
    aliases:
      - observe
    env:
      COOKIE: happy-cookie-not-secret-but-for-cluster
    cmds:
      - echo "==Observing remote app"
      - run/observer.sh

  fmt: mix format

  ## Git ops
  ops.init: mix git_ops.release --initial
  ops.up: |
    mix git_ops.release --yes
    git push --follow-tags
  ops.up.rel: mix git_ops.release
  ops.up.tag: git push --follow-tags
  ops.types: mix eh.git.ops.types
  ops.setup: |
    # run after add igniter dep in mix.exs
    mix igniter.install git_ops

  ## Docker
  dk.build: docker build -t {{.DOCKER_IMG_NAME}} .
  dk.run: |
    task dk.build
    docker run --name {{.DOCKER_CONTAINER_NAME}} --rm -it -p 4010:4000 \
      -e "PHX_SERVER=true" \
      -e "SECRET_KEY_BASE=g7kQjVqv2DsMrb4AJABkKoIGIZuFP3R2xZT4tJ9mdh9Xt92JJPIa1wk2g/lz2G+x" \
      -e "RELEASE_DISTRIBUTION=name" \
      -e "RELEASE_NODE=hi@{{.DOCKER_CONTAINER_NAME}}.orb.local" \
      -e "RELEASE_COOKIE={{.LOCAL_MAGIC_COOKIE}}" \
      {{.DOCKER_IMG_NAME}} bin/hi start_iex

  dk.iex: docker exec -it {{.DOCKER_CONTAINER_NAME}} bin/hi remote
  dk.in: docker exec -it {{.DOCKER_CONTAINER_NAME}} sh
  dk.sh: docker run --rm -it {{.DOCKER_IMG_NAME}} sh
  dk.info: |
    docker exec -it {{.DOCKER_CONTAINER_NAME}} bin/hi
  dk.ping: curl https://{{.DOCKER_CONTAINER_NAME}}.orb.local/ping | jq
  dk.down: docker stop {{.DOCKER_CONTAINER_NAME}}
  dk.test: |
    docker compose version
    docker compose up --quiet-pull --exit-code-from curl # --abort-on-container-exit

  ## Setup
  setup: |
    mix deps.get
